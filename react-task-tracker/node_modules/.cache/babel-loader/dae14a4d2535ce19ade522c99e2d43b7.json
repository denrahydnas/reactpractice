{"ast":null,"code":"var _jsxFileName = \"/Users/sandyharned/reactpractice/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctors Appt',\n    day: 'Feb 5th at 2:30pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Interview',\n    day: 'Feb 6th at 4:30pm',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'Vet Appt',\n    day: 'Feb 5th at 12:30pm',\n    reminder: true\n  }]); // Delete Task\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Toggle reminder\n\n\n  const toggleReminder = id => {\n    console.log(id, 'remind me');\n    setTasks(tasks.map(task => task.id === id ? {} : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 27\n    }, this) : 'No Tasks To Show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"qXrWTvRvo6yP8/LRx6BJtQFmTY0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sandyharned/reactpractice/react-task-tracker/src/App.js"],"names":["useState","Header","Tasks","App","tasks","setTasks","id","text","day","reminder","deleteTask","filter","task","toggleReminder","console","log","map","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CACjC;AACEM,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,GAAG,EAAE,mBAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADiC,EAOjC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,GAAG,EAAE,mBAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAPiC,EAajC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,GAAG,EAAE,oBAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAbiC,CAAD,CAAlC,CADgB,CAsBhB;;AACA,QAAMC,UAAU,GAAIJ,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACO,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAvBgB,CA2BhB;;;AACA,QAAMO,cAAc,GAAIP,EAAD,IAAQ;AAC7BQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,EAAZ,EAAgB,WAAhB;AACAD,IAAAA,QAAQ,CAACD,KAAK,CAACY,GAAN,CAAWJ,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAZ,GAAiB,EAAjB,GAAsBM,IAA1C,CAAD,CAAR;AACD,GAHD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGR,KAAK,CAACa,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEb,KAAd;AAAqB,MAAA,QAAQ,EAAEM,UAA/B;AAA2C,MAAA,QAAQ,EAAEG;AAArD;AAAA;AAAA;AAAA;AAAA,YAAnB,GAA6F,kBAFhG;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAxCD;;GAAMV,G;;KAAAA,G;AA0CN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\n\n\n\nconst App = () => {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: 'Doctors Appt',\n      day: 'Feb 5th at 2:30pm',\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: 'Interview',\n      day: 'Feb 6th at 4:30pm',\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: 'Vet Appt',\n      day: 'Feb 5th at 12:30pm',\n      reminder: true,\n    }\n  ])\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // Toggle reminder\n  const toggleReminder = (id) => {\n    console.log(id, 'remind me')\n    setTasks(tasks.map((task) => task.id === id ? {} : task))\n  }\n\n\n  return (\n    <div className=\"container\">\n      <Header />\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : 'No Tasks To Show'}\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}